<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Debian on command not found:</title>
    <link>/tags/debian/</link>
    <description>Recent content in Debian on command not found:</description>
    <generator>Hugo</generator>
    <language>ja</language>
    <lastBuildDate>Wed, 30 Sep 2020 00:27:00 +0900</lastBuildDate>
    <atom:link href="/tags/debian/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>cowbuilder</title>
      <link>/posts/cowbuilder/</link>
      <pubDate>Wed, 30 Sep 2020 00:27:00 +0900</pubDate>
      <guid>/posts/cowbuilder/</guid>
      <description>仕事で様々なバージョンの Debian パッケージを作らなければならなかったとき、 環境を用意するコストがとても低くて重宝した。&#xA;% apt-get install cowbuilder chroot 環境の作成&#xA;% cowbuilder --create --distribution buster --architecture amd64 --basepath /var/cache/pbuilder/buster64.cow chroot 環境へのログイン&#xA;# cowbuilder --login --basepath /var/cache/pbuilder/buster64.cow &amp;ndash;save オプションを付けると chroot 環境への変更を保存できる。&#xA;% cowbuilder --login --save --basepath /var/cache/pbuilder/buster64.cow bind mount&#xA;% cowbuilder --login --save --bindmount /home/workdir --basepath /var/cache/pbuilder/buster64.cow 下記を実行し、作成した chroot 環境をまとめて更新していた。&#xA;% for a in /var/cache/pbuilder/*.cow; do cowbuilder --update --basepath $a; done </description>
    </item>
    <item>
      <title>LXC</title>
      <link>/posts/lxc/</link>
      <pubDate>Tue, 29 Sep 2020 17:50:53 +0900</pubDate>
      <guid>/posts/lxc/</guid>
      <description>$ uname -srv Linux 4.19.0-9-amd64 #1 SMP Debian 4.19.118-2+deb10u1 (2020-06-07) $ cat /etc/debian_version 10.4 依存関係でいろいろ入ってしまうけれども iptables, dnsmasq, bridge-utils それぞれを操作するのが面倒なので、 virsh (1) で全てよしなにやってもらうことにした。&#xA;% apt-get install libvirt-clients libvirt-daemon-system dnsmasq bridge-utils % virsh net-list Name State Autostart Persistent -------------------------------------------- default active no yes $ ip addr show virbr0 3: virbr0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc noqueue state UP group default qlen 1000 link/ether 52:54:00:75:2f:a9 brd ff:ff:ff:ff:ff:ff inet 192.168.122.1/24 brd 192.168.122.255 scope global virbr0 valid_lft forever preferred_lft forever LXC インストール</description>
    </item>
    <item>
      <title>chroot &#43; OverlayFS</title>
      <link>/posts/chroot-overlayfs/</link>
      <pubDate>Mon, 28 Sep 2020 22:59:31 +0900</pubDate>
      <guid>/posts/chroot-overlayfs/</guid>
      <description>出番がないかもしれないが、 OverlayFS で chroot 環境をクリーンに保つをやってみた。&#xA;$ uname -srv Linux 4.19.0-9-amd64 #1 SMP Debian 4.19.118-2+deb10u1 (2020-06-07) $ cat /etc/debian_version 10.4 % debootstrap buster ./buster64 http://ftp.jp.debian.org/debian OverlayFS でのマウントについては mount (8) を参照&#xA;% mkdir upper workdir % mount -t overlay overlay -o lowerdir=./buster64,upperdir=./upper,workdir=./workdir ./buster64 % df ファイルシス 1K-ブロック 使用 使用可 使用% マウント位置 udev 2005984 0 2005984 0% /dev tmpfs 404160 5436 398724 2% /run /dev/vda3 99016264 2958444 91008396 4% / tmpfs 2020792 0 2020792 0% /dev/shm tmpfs 5120 0 5120 0% /run/lock tmpfs 2020792 0 2020792 0% /sys/fs/cgroup overlay 99016264 2958444 91008396 4% /root/buster64 % mount --rbind /dev .</description>
    </item>
    <item>
      <title>OpenConnect</title>
      <link>/posts/openconnect/</link>
      <pubDate>Thu, 04 Apr 2019 01:27:45 +0900</pubDate>
      <guid>/posts/openconnect/</guid>
      <description>GlobalProtect で VPN 接続する機会があり、 Mac も Windows も持っていないのでどうしたものかと調べていたところ、 OpenConnect というソフトウェアで GlobalProtect に VPN 接続することができることを知ったので記録として残しておく。 OpenConnect の開発者と Debian パッケージのメンテナーありがとう。&#xA;openconnect&#xA;https://packages.debian.org/ja/sid/openconnect&#xA;環境 $ lsb_release -a No LSB modules are available. Distributor ID: Debian Description: Debian GNU/Linux buster/sid Release: unstable Codename: sid $ uname -a Linux koyomi 4.19.0-4-amd64 #1 SMP Debian 4.19.28-2 (2019-03-15) x86_64 GNU/Linux fchu@koyomi:~$ lsb_release -a No LSB modules are available. Distributor ID: Debian Description: Debian GNU/Linux buster/sid Release: unstable Codename: sid $ apt-cache show openconnect Package: openconnect Version: 8.</description>
    </item>
    <item>
      <title>HUGO</title>
      <link>/posts/hugo/</link>
      <pubDate>Sat, 19 Jan 2019 21:47:42 +0900</pubDate>
      <guid>/posts/hugo/</guid>
      <description>debian-devel-changes のメーリングリストを眺めていたら、 HUGO という Site Generator を見付けた。 数年前にブログ環境を消失してから、ブログを書く気力が無くなってしまっていたが、HUGO を使い Github Pages にブログを書くことを再開しようと思う。&#xA;debian-devel-changes&#xA;https://lists.debian.org/debian-devel-changes/&#xA;HUGO&#xA;https://gohugo.io/&#xA;HUGO の Debian パッケージ&#xA;https://packages.debian.org/sid/hugo&#xA;実行環境 $ lsb_release -a No LSB modules are available. Distributor ID: Debian Description: Debian GNU/Linux buster/sid Release: unstable Codename: sid $ uname -a Linux koyomi 4.19.0-4-amd64 #1 SMP Debian 4.19.28-2 (2019-03-15) x86_64 GNU/Linux インストール # apt-get install hugo バージョン $ hugo version Hugo Static Site Generator v0.54.0/extended linux/amd64 BuildDate: 2019-02-01T18:13:18Z ブログのような形式で情報が並ぶと目的の情報に辿り着くまでがしんどかったので、 タグも日時も表示されず、単一のページにタイトルだけがずらっと並び、 そこを Ctrl + f で検索するような、とにかくシンプルなテーマを探し、下記を見付けた。</description>
    </item>
  </channel>
</rss>
